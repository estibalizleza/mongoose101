<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Ikasleak API</title>
</head>
<body>
    <h1>Test Ikasleak API</h1>
    
    <button onclick="fetchIkasleak()">Get Ikasleak</button>
    <pre id="ikasleak"></pre>

    <h2>Create Ikasle</h2>
    <form onsubmit="event.preventDefault(); createIkasle();">
        <label for="createIzena">Izena:</label>
        <input type="text" id="createIzena" required>
        <br>
        <label for="createAdina">Adina:</label>
        <input type="number" id="createAdina" required>
        <br>
        <label for="createEmail">Email:</label>
        <input type="email" id="createEmail" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newIkasle"></pre>

    <h2>Delete Ikasle</h2>
    <form onsubmit="event.preventDefault(); deleteIkasleByID();">
        <label for="deleteId">IkasleID:</label>
        <input type="text" id="deleteId" required>
        <br>
        <button type="submit">Delete</button>
    </form>
    <pre id="deletedIkasle"></pre>

    <h2>Edit Ikasle</h2>
    <form onsubmit="event.preventDefault(); updateIkasleByID();">
        <label for="ikasleEmail">Ikasle Email:</label>
        <select id="ikasleEmail" required>
            <option value="" disabled selected>Choose an ikasle</option>
        </select>
        <br>
        <label for="editIzena">Izena:</label>
        <input type="text" id="editIzena" required>
        <br>
        <label for="editAdina">Adina:</label>
        <input type="number" id="editAdina" required>
        <br>
        <label for="editEmail">Email:</label>
        <input type="email" id="editEmail" required>
        <br>
        <button type="submit">Edit</button>
    </form>
    <pre id="updatedIkasle"></pre>

    <script>
        async function fetchIkasleak() {
            try {
                const response = await fetch('/api/ikasleak');
                if (!response.ok) throw new Error('Failed to fetch Ikasleak');
                const data = await response.json();
                document.getElementById('ikasleak').innerText = JSON.stringify(data, null, 2);
                
                const ikasleEmailSelect = document.getElementById('ikasleEmail');
                ikasleEmailSelect.innerHTML = '<option value="" disabled selected>Choose an ikasle</option>';
                data.forEach(ikasle => {
                    const option = document.createElement('option');
                    option.value = ikasle._id;  
                    option.textContent = ikasle.email;  
                    ikasleEmailSelect.appendChild(option);
                });
            } catch (error) {
                console.error(error);
                document.getElementById('ikasleak').innerText = 'Error fetching Ikasleak.';
            }
        }

        async function createIkasle() {
            try {
                const izena = document.getElementById('createIzena').value;
                const adina = document.getElementById('createAdina').value;
                const email = document.getElementById('createEmail').value;

                const response = await fetch('/api/ikasleak', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ izena, adina, email }),
                });

                if (!response.ok) throw new Error('Failed to create Ikasle');
                const data = await response.json();
                document.getElementById('newIkasle').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error(error);
                document.getElementById('newIkasle').innerText = 'Error creating Ikasle.';
            }
        }

        async function deleteIkasleByID() {
            try {
                const id = document.getElementById('deleteId').value;

                const response = await fetch(`/api/ikasleak/${id}`, { method: 'DELETE' });
                if (!response.ok) throw new Error('Failed to delete Ikasle');
                const data = await response.json();

                document.getElementById('deletedIkasle').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error(error);
                document.getElementById('deletedIkasle').innerText = 'Error deleting Ikasle.';
            }
        }

        async function updateIkasleByID() {
            try {
                const id = document.getElementById('ikasleEmail').value;
                const izena = document.getElementById('editIzena').value;
                const adina = document.getElementById('editAdina').value;
                const email = document.getElementById('editEmail').value;

                const response = await fetch(`/api/ikasleak/${id}`, {
                    method: 'PUT', 
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ izena, adina, email }),
                });

                if (!response.ok) throw new Error('Failed to update Ikasle');
                const data = await response.json();

                document.getElementById('updatedIkasle').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error(error);
                document.getElementById('updatedIkasle').innerText = 'Error updating Ikasle.';
            }
        }
    </script>
</body>
</html>
